<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="http://CoreWPF.com">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../Brushes.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <ControlTemplate x:Key="Template.Button" TargetType="{x:Type Button}">
    <Grid SnapsToDevicePixels="True">
      <Border x:Name="RootBorder"
              Background="{TemplateBinding BorderBrush}"
              CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(core:BorderProperties.CornerRadius)}">
        <Border x:Name="MainBorder"
                Background="{TemplateBinding Background}"
                Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                Path=(core:BorderProperties.CornerRadius),
                Converter={core:CornerRadiusAdjuster Adjustment=-1}}">
          <ContentPresenter x:Name="ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
      </Border>
    </Grid>
  </ControlTemplate>

  <Style x:Key="Style.Button.Base" TargetType="{x:Type Button}">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseLayoutRounding" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="core:BorderProperties.CornerRadius" Value="5" />
    <Setter Property="Template" Value="{StaticResource Template.Button}" />
  </Style>

  <Style x:Key="Style.Button.Default.Dark"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource Style.Button.Base}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Default.MouseOver}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Default.Background}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.Dark.Button.Default.Foreground}" />
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Dark.Button.Default.Border}" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Width" Value="100" />
  </Style>

  <Style x:Key="Style.Button.Accent.Dark"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource Style.Button.Base}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Accent.MouseOver}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Accent.Background}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.Dark.Button.Accent.Foreground}" />
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Dark.Button.Accent.Border}" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Width" Value="100" />
  </Style>

  <Style x:Key="Style.Button.Default.Light"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource Style.Button.Base}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Light.Button.Default.MouseOver}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Brush.Light.Button.Default.Background}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.Light.Button.Default.Foreground}" />
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Light.Button.Default.Border}" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Width" Value="100" />
  </Style>

  <Style x:Key="Style.Button.Accent.Light"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource Style.Button.Base}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Light.Button.Accent.MouseOver}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Brush.Light.Button.Accent.Background}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.Light.Button.Accent.Foreground}" />
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Light.Button.Accent.Border}" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Width" Value="100" />
  </Style>

  <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Style.Button.Base}" />
</ResourceDictionary>