<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="http://CoreWPF.com">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../Brushes.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <ControlTemplate x:Key="Template.Button" TargetType="{x:Type Button}">
    <Grid SnapsToDevicePixels="True">
      <Border x:Name="RootBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(core:BorderProperties.CornerRadius)}">
        <Border x:Name="MainBorder"
                Background="{TemplateBinding Background}"
                Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                Path=(core:BorderProperties.CornerRadius),
                Converter={core:CornerRadiusAdjuster Adjustment=-1}}">
          <ContentPresenter x:Name="ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
      </Border>
      <Border x:Name="FocusBorder"
              BorderBrush="Aquamarine"
              CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(core:BorderProperties.CornerRadius)}"
              Margin="-1"
              BorderThickness="1"
              Visibility="Collapsed">
        <Border.Effect>
          <BlurEffect Radius="3" KernelType="Gaussian" />
        </Border.Effect>
      </Border>
    </Grid>
  </ControlTemplate>

  <Style x:Key="Style.Button" TargetType="{x:Type Button}">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="UseLayoutRounding" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="False" />
    <Setter Property="core:BorderProperties.CornerRadius" Value="5" />
    <Setter Property="Template" Value="{StaticResource Template.Button}" />
  </Style>
  
  <!--<Style x:Key="Style.Button.Dark.Default" 
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource Style.Button}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Default.MouseOver}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Default.Pressed}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Default.Background}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.Dark.Button.Default.Foreground}" />
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Dark.Button.Default.Border}" />
  </Style>
  
  <Style x:Key="Style.Button.Dark.Accent" 
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource Style.Button}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Accent.MouseOver}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Accent.Pressed}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="{StaticResource Brush.Dark.Button.Accent.Background}" />
    <Setter Property="Foreground" Value="{StaticResource Brush.Dark.Button.Accent.Foreground}" />
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Dark.Button.Accent.Border}" />
  </Style>-->
  
  <Style BasedOn="{StaticResource Style.Button}" TargetType="{x:Type Button}" />
</ResourceDictionary>