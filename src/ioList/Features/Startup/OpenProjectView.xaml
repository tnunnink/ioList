<UserControl x:Class="ioList.Features.Startup.OpenProjectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:core="http://CoreWPF.com"
             xmlns:shared="clr-namespace:ioList.Shared"
             xmlns:local="clr-namespace:ioList.Features.Startup"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{d:DesignInstance local:StartupViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d"
             d:DesignHeight="700" d:DesignWidth="600">
  <Border Background="{StaticResource Brush.Dark.Background}">
    <Grid Margin="20">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>

      <TextBox Grid.Row="0"
               Style="{StaticResource Style.TextBox.Dark}"
               HorizontalAlignment="Left"
               MinWidth="260" />

      <StackPanel Grid.Row="0" HorizontalAlignment="Right"
                  Orientation="Horizontal">
        <Button Style="{StaticResource Style.Button.Default.Dark}"
                Command="{Binding NewCommand}"
                Margin="5 0 ">
          <StackPanel Orientation="Horizontal">
            <core:Icon Template="{StaticResource Icon.List.Add}" Margin="5 0" />
            <TextBlock Text="New" VerticalAlignment="Center" />
          </StackPanel>
        </Button>
        <Button Style="{StaticResource Style.Button.Default.Dark}"
                Command="{Binding OpenCommand}"
                Margin="5 0 ">
          <StackPanel Orientation="Horizontal">
            <core:Icon Template="{StaticResource Icon.Folder.Add}" Margin="5 0" />
            <TextBlock Text="Open" VerticalAlignment="Center" />
          </StackPanel>
        </Button>
      </StackPanel>

      <ListView Grid.Row="1"
                ItemsSource="{Binding Projects}"
                SelectedItem="{Binding SelectedProject}"
                Background="Transparent"
                BorderThickness="0"
                Margin="0 20"
                HorizontalContentAlignment="Stretch"
                ItemContainerStyle="{StaticResource Style.ListViewItem.Dark}">
        <ListView.ItemTemplate>
          <DataTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              
              <core:Icon Grid.Column="0" 
                         Template="{StaticResource Icon.List}" 
                         Margin="5 0 10 0"/>
              <StackPanel Grid.Column="1">
                <TextBlock Text="{Binding Name}" 
                           VerticalAlignment="Center"
                           Foreground="{StaticResource Brush.Dark.Accent}"
                           FontWeight="SemiBold"
                           Padding="1"/>
                <TextBlock Text="{Binding Location}" 
                           VerticalAlignment="Center"
                           Foreground="{StaticResource Brush.Dark.Caption}"
                           Padding="1"/>
              </StackPanel>
              
              <core:Icon Grid.Column="2"
                         Template="{StaticResource Icon.Error}" 
                         Foreground="{StaticResource Brush.Dark.Control.Error}"
                         Visibility="{Binding Exists, Converter={core:BooleanVisibilityConverter IsInverse=True}}"
                         Margin="5 0"/>
              
              <TextBlock Grid.Column="2"
                         Text="{Binding UpdatedOn}" 
                         Foreground="{StaticResource Brush.Dark.Caption}"
                         Visibility="{Binding Exists, Converter={core:BooleanVisibilityConverter}}"
                         VerticalAlignment="Center"
                         Margin="5 0"/>
              
              <core:PopupButton Grid.Column="2" 
                                Margin="10 0">
                <core:Icon Template="{StaticResource Icon.Menu}" />
                <core:PopupButton.Popup>
                  <Popup Placement="Bottom"
                         PopupAnimation="Slide"
                         HorizontalOffset="-180">
                    <Grid>
                      <Border Margin="0,0,8,8"
                              Background="SlateGray"
                              BorderThickness="1"
                              CornerRadius="5">
                        <Border.Effect>
                          <DropShadowEffect BlurRadius="5" Opacity="0.2" />
                        </Border.Effect>
                      </Border>
                    </Grid>
                  </Popup>
                </core:PopupButton.Popup>
                <core:PopupButton.Style>
                  <Style TargetType="{x:Type core:PopupButton}" 
                         BasedOn="{StaticResource Style.PopupButton.Icon}">
                    <Setter Property="Background" Value="{StaticResource Brush.Dark.Common.MouseOver}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListViewItem}},Path=IsMouseOver}" Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </core:PopupButton.Style>
              </core:PopupButton>
            </Grid>
          </DataTemplate>
        </ListView.ItemTemplate>
        
      </ListView>
    </Grid>
  </Border>
</UserControl>